        promiseland.set("profile", "client");
        
        var ServerProfile = () {
          this.name = (){
            return "server";
          };
          this.find = (){
            return this.connection;
          };
        };
        ServerProfile.prototype = new promiseland.ProfileBaseClass();
        
        var ServerConnection = (socket) {
          this.socket = socket;
          var self = this;
          socket.on("pl", (data){
            self.emit("data", data);
          });
          this.send = (data){
            socket.emit("pl", data);
          };
        };
        ServerConnection.prototype = new promiseland.ConnectionBaseClass();
        
        var serverProfile = new ServerProfile();
        promiseland.addProfile(serverProfile);

        var socket = io.connect();
        socket.on("connect", function(){
          var connection = new ServerConnection(socket);
          serverProfile.connection = connection;
          serverProfile.emit("connection", connection);
          
        });
        socket.on("disconnect", function(){
          serverProfile.connection.emit("disconnect");
          serverProfile.connection = undefined;
        });



var Button = require "dijit/form/Button";
var TableContainer = require "dojox/layout/TableContainer";
var Text = require "./Text";

var main = require "testConsole/main";

var tc;

var runTests = (){
  
  var results = *(main.runTests());
  if (tc){
    tc.destroy();
  };
  tc = new TableContainer({});
  tc.placeAt(document.body);
  
  if (results.failed){
    var f = new Text({label: "failed", text: "-"});
    tc.addChild(f);
  }else{
    var t;
    for (t in results){
      
      var testRes = results[t];
      var cnt = 0;
      var successCnt = 0;
      var testName;
      var errorStr = "";
      for (testName in testRes){
        ++cnt;
        if (testRes[testName]){
          ++successCnt;
        }else{
          errorStr += testName + " failed; \n";
        };
      };
      var textStr = "run " + cnt + " tests. \n";
      textStr += (cnt - successCnt) + " failed. \n"
      textStr += errorStr;
      
      var w = new Text({
        label: t,
        text: textStr
      });
      tc.addChild(w);
    };
  };
  tc.startup();
};

var b = new Button({
  label: "test",
  onClick: runTests
});

b.placeAt(document.body);


