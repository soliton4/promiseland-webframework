        promiseland.set("profile", "client");
        
        var ServerProfile = () {
          this.name = (){
            return "server";
          };
          this.find = (){
            return this.connection;
          };
        };
        ServerProfile.prototype = new promiseland.ProfileBaseClass();
        
        var ServerConnection = (socket) {
          this.socket = socket;
          var self = this;
          socket.on("pl", (data){
            self.emit("data", data);
          });
          this.send = (data){
            socket.emit("pl", data);
          };
        };
        ServerConnection.prototype = new promiseland.ConnectionBaseClass();
        
        var serverProfile = new ServerProfile();
        promiseland.addProfile(serverProfile);

        var socket = io.connect();
        socket.on("connect", function(){
          var connection = new ServerConnection(socket);
          serverProfile.connection = connection;
          serverProfile.emit("connection", connection);
          
          runTests();
          
        });
        socket.on("disconnect", function(){
          serverProfile.connection.emit("disconnect");
          serverProfile.connection = undefined;
        });

function querySt(Key) {
    var url = window.location.href;
    KeysValues = url.split(/[\?&]+/);
    for (i = 0; i < KeysValues.length; i++) {
        KeyValue = KeysValues[i].split("=");
        if (KeyValue[0] == Key) {
            return KeyValue[1];
        };
    };
};

var runTests = (){
  console.log("running tests");
  var testObj = require "test/simpleTests";
  
  require "test/frameTests";
  
  var collector = require "./testCollector";
  debugger;
  var type = querySt("type") || "unknown";
  collector.postResult(type, testObj);
  
  *collector.waitForFinish(type);
  window.close();
};
